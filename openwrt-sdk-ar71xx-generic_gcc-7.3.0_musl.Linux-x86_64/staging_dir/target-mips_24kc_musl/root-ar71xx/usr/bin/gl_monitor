#!/bin/sh

. /lib/functions.sh

cur_status="down"
port_status="down"

sta_event() {
	local try

	if [ -n "$(ip address show wlan-sta 2>/dev/null | grep global)" ]; then
		try=$(cat /proc/net/wireless | grep wlan-sta |awk -F ' ' '{print $9}' 2>/dev/null)

		if [ -n $try ] && [ $try -gt 5 ]; then
			wpa_cli flush
		fi
	fi
}

# $1: port 
# $2: ifname
wan_event() {
	local port=${1#port}
	local dev=$2
	local proto

	[ -z "$dev" ] && return 0

	if [ -n "$(swconfig dev switch0 port $port show | grep link:up)" ]; then
		cur_status="up"
	else
		cur_status="down"
	fi

	if [ "$cur_status" = "up" -a "$port_status" = "down" ]; then
		port_status="up"
	elif [ "$cur_status" = "down" -a "$port_status" = "up" ]; then
		proto=$(uci get network.wan.proto)
		if [ ! "$proto" = "static" ];then
			ip link set $dev down && ip link set $dev up
		fi
		port_status="down"
	fi
}

modem_event() {
	local dev
	local real_ip
	local curr_ip
	local disable
	local interface

	disable=$(uci get network.modem.disabled 2>/dev/null)
	[ "$disable" = "1" ] && return

	interface=$(ifstatus modem | grep l3_device | cut -d '"' -f 4)
	[ -z $interface ] && {
		ubus call network.interface.modem down
		sleep 1
		killall uqmi
		ubus call network.interface.modem up
		logger "modem interface miss"
		return
	}

	curr_ip=$(ip address show $interface | grep global | awk -F "[ /]" '{print $6}')
	if [ -z "$curr_ip" ];then
		ubus call network.interface.modem down
		sleep 1
		killall uqmi
		ubus call network.interface.modem up
		logger "modem ip miss"
		return
	fi

	if [ "$interface" = "wwan0" ];then
		dev=$(ls /dev/cdc-wdm*)
		[ -z $dev ] && return

		real_ip=$(timeout -t 2 uqmi -d $dev --get-current-setting | grep \"ip\": | awk -F'"' '{print $4}')
		[ -z $real_ip ] && {
			ubus call network.interface.modem down
			sleep 1
			killall uqmi
			ubus call network.interface.modem up
			logger "modem real ip miss"

			return
		}

		if [ ! $curr_ip = $real_ip ]; then
			ubus call network.interface.modem down
			sleep 1
			killall uqmi
			ubus call network.interface.modem up
			logger "modem ip change"

			return
		fi
	fi
}

model=$(awk -F': ' '/machine/ {print tolower($NF)}' /proc/cpuinfo |cut -d- -f2-)
counter=0

while [ true ]; do
	let counter=counter+1
	case "$model" in
	"ar750")
		sta_event
		;;
	"ar750s")
		sta_event
		wan_event "port1" "eth0.2"
		;;
	"x750-4g")
		sta_event
		[ $counter = 20 ] && {
			modem_event
			counter=0
		}
		;;
	"mifi")
		[ $counter = 20 ] && {
			modem_event
			counter=0
		}
		;;
	"vixmini")
		wan_event "port0" "eth0"
		;;
	*)
		;;
	esac

	sleep 3
done
